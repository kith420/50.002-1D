/*
    This file was generated automatically by Alchitry Labs 2.0.24-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module game_cu (
        input wire clk,
        input wire rst,
        input wire decrease_timer,
        input wire [31:0] regfile_rd2,
        input wire e0_button,
        input wire e1_button,
        input wire e2_button,
        input wire e3_button,
        input wire e4_button,
        output reg [5:0] alufn,
        output reg [2:0] asel,
        output reg [2:0] bsel,
        output reg [3:0] alu_out_sel,
        output reg [3:0] regfile_wa,
        output reg [3:0] regfile_ra1,
        output reg [3:0] regfile_ra2,
        output reg regfile_we,
        output reg [31:0] debug_counter
    );
    localparam SLOW_CLOCK_DEFAULT_SPEED = 5'h18;
    logic slow_clock;
    localparam _MP_RISE_970518340 = 1'h1;
    localparam _MP_FALL_970518340 = 1'h0;
    logic M_slow_clock_edge_in;
    logic M_slow_clock_edge_out;
    
    edge_detector #(
        .RISE(_MP_RISE_970518340),
        .FALL(_MP_FALL_970518340)
    ) slow_clock_edge (
        .clk(clk),
        .in(M_slow_clock_edge_in),
        .out(M_slow_clock_edge_out)
    );
    
    
    logic [31:0] D_slow_clock_counter_d, D_slow_clock_counter_q = 0;
    logic [4:0] D_speed_pointer_d, D_speed_pointer_q = 5'h18;
    localparam E_GameStates_GENERATE_SEQUENCE = 6'h0;
    localparam E_GameStates_SG_ASSIGN_STAGE_1 = 6'h1;
    localparam E_GameStates_SG_ASSIGN_TIMER_4 = 6'h2;
    localparam E_GameStates_CHECK_STAGE4 = 6'h3;
    localparam E_GameStates_BRANCH_CHECK4 = 6'h4;
    localparam E_GameStates_ASSIGN_TIMER4 = 6'h5;
    localparam E_GameStates_CHECK_STAGE8 = 6'h6;
    localparam E_GameStates_BRANCH_CHECK8 = 6'h7;
    localparam E_GameStates_PLAYER_WINS = 6'h8;
    localparam E_GameStates_DS_ASSIGN_TEMPR = 6'h9;
    localparam E_GameStates_DS_ASSIGN_E_R4 = 6'ha;
    localparam E_GameStates_DS_ACTIVATE_LIGHT = 6'hb;
    localparam E_GameStates_DS_DEACTIVATE_LIGHT = 6'hc;
    localparam E_GameStates_DS_SHR_TEMPR = 6'hd;
    localparam E_GameStates_DS_INCREASE_SEQ_ORDER = 6'he;
    localparam E_GameStates_DS_CHECK_SEQ_ORDER = 6'hf;
    localparam E_GameStates_DS_BRANCH_SEQ_CHECK = 6'h10;
    localparam E_GameStates_PR_RESET_SEQ_ORD = 6'h11;
    localparam E_GameStates_PR_ASSIGN_TEMP_SEQ = 6'h12;
    localparam E_GameStates_START_SET_TIMER = 6'h13;
    localparam E_GameStates_IDLE = 6'h14;
    localparam E_GameStates_GAMEOVER = 6'h15;
    localparam E_GameStates_DECREASE_GAMETIMER = 6'h16;
    localparam E_GameStates_CHECK_GAMETIMER = 6'h17;
    localparam E_GameStates_BRANCH_GAMETIMER = 6'h18;
    localparam E_GameStates_PG_ASSIGN_E_R4 = 6'h19;
    localparam E_GameStates_PG_SHR_TEMPR = 6'h1a;
    localparam E_GameStates_PG_INCREASE_SEQ_ORDER = 6'h1b;
    localparam E_GameStates_PG_CHECK_SEQ_ORDER = 6'h1c;
    localparam E_GameStates_PG_BRANCH_SEQ_CHECK = 6'h1d;
    localparam E_GameStates_CHECK_ELEMENT_0 = 6'h1e;
    localparam E_GameStates_CHECK_ELEMENT_1 = 6'h1f;
    localparam E_GameStates_CHECK_ELEMENT_2 = 6'h20;
    localparam E_GameStates_CHECK_ELEMENT_3 = 6'h21;
    localparam E_GameStates_BRANCH_ELEMENT_BUTTON = 6'h22;
    localparam E_GameStates_FR_RESET_SEQ_ORD = 6'h23;
    localparam E_GameStates_FR_ASSIGN_TEMP_SEQ = 6'h24;
    localparam E_GameStates_FR_INCREASE_SCORE_1 = 6'h25;
    localparam E_GameStates_FR_INCREASE_STAGE_1 = 6'h26;
    logic [5:0] D_game_fsm_d, D_game_fsm_q = 6'h0;
    always @* begin
        D_slow_clock_counter_d = D_slow_clock_counter_q;
        D_speed_pointer_d = D_speed_pointer_q;
        D_game_fsm_d = D_game_fsm_q;
        
        debug_counter = 1'h0;
        D_slow_clock_counter_d = D_slow_clock_counter_q + 1'h1;
        D_speed_pointer_d = D_speed_pointer_q;
        slow_clock = D_slow_clock_counter_q[D_speed_pointer_q];
        M_slow_clock_edge_in = slow_clock;
        alufn = 1'h0;
        asel = 1'h0;
        bsel = 1'h0;
        regfile_we = 1'h0;
        regfile_wa = 3'h6;
        regfile_ra1 = 1'h0;
        regfile_ra2 = 1'h0;
        alu_out_sel = 1'h0;
        D_game_fsm_d = D_game_fsm_q;
        if (rst) begin
            D_game_fsm_d = 6'h0;
        end else begin
            
            case (D_game_fsm_q)
                6'h0: begin
                    regfile_we = 1'h1;
                    regfile_wa = 2'h2;
                    alu_out_sel = 2'h3;
                    D_game_fsm_d = 6'h1;
                    debug_counter = 1'h1;
                end
                6'h1: begin
                    regfile_we = 1'h1;
                    regfile_wa = 1'h1;
                    alu_out_sel = 2'h2;
                    debug_counter = 2'h2;
                    D_game_fsm_d = 6'h2;
                end
                6'h2: begin
                    regfile_we = 1'h1;
                    regfile_wa = 3'h6;
                    alu_out_sel = 2'h1;
                    debug_counter = 2'h3;
                    D_game_fsm_d = 6'h3;
                end
                6'h3: begin
                    alufn = 8'h33;
                    regfile_ra1 = 1'h1;
                    asel = 2'h0;
                    bsel = 3'h5;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    debug_counter = 3'h4;
                    D_game_fsm_d = 6'h4;
                end
                6'h4: begin
                    regfile_ra2 = 3'h5;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h5;
                    end else begin
                        D_game_fsm_d = 6'h6;
                    end
                end
                6'h5: begin
                    alufn = 8'h0;
                    regfile_ra1 = 3'h6;
                    asel = 2'h0;
                    bsel = 3'h5;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h6;
                    D_game_fsm_d = 6'h9;
                end
                6'h6: begin
                    debug_counter = 3'h5;
                    alufn = 8'h37;
                    regfile_ra1 = 1'h1;
                    asel = 2'h0;
                    bsel = 3'h6;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    D_game_fsm_d = 6'h7;
                end
                6'h7: begin
                    regfile_ra2 = 3'h5;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h9;
                    end else begin
                        D_game_fsm_d = 6'h8;
                    end
                end
                6'h9: begin
                    debug_counter = 3'h6;
                    alufn = 8'h1a;
                    regfile_ra1 = 2'h2;
                    regfile_ra2 = 2'h3;
                    asel = 2'h0;
                    bsel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h3;
                    D_game_fsm_d = 6'ha;
                end
                6'ha: begin
                    debug_counter = 3'h6;
                    alufn = 8'h6;
                    regfile_ra1 = 2'h3;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h4;
                    D_game_fsm_d = 6'hb;
                end
                6'hb: begin
                    debug_counter = 3'h7;
                    alufn = 8'h20;
                    regfile_ra2 = 3'h4;
                    asel = 2'h2;
                    bsel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 4'h8;
                    D_game_fsm_d = 6'hc;
                end
                6'hc: begin
                    if (M_slow_clock_edge_out) begin
                        debug_counter = 4'h8;
                        regfile_we = 1'h1;
                        regfile_wa = 4'h8;
                        alu_out_sel = 3'h4;
                        D_game_fsm_d = 6'hd;
                    end
                end
                6'hd: begin
                    debug_counter = 4'h9;
                    alufn = 8'h21;
                    regfile_ra1 = 2'h3;
                    asel = 2'h0;
                    bsel = 2'h3;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h3;
                    D_game_fsm_d = 6'he;
                end
                6'he: begin
                    debug_counter = 4'ha;
                    alufn = 8'h0;
                    regfile_ra1 = 3'h7;
                    asel = 2'h0;
                    bsel = 2'h2;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h7;
                    D_game_fsm_d = 6'hf;
                end
                6'hf: begin
                    debug_counter = 4'hb;
                    alufn = 8'h35;
                    regfile_ra1 = 3'h7;
                    regfile_ra2 = 1'h1;
                    asel = 2'h0;
                    bsel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    D_game_fsm_d = 6'h10;
                end
                6'h10: begin
                    regfile_ra2 = 3'h5;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'ha;
                    end else begin
                        D_game_fsm_d = 6'h11;
                    end
                end
                6'h11: begin
                    debug_counter = 4'hc;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h7;
                    alu_out_sel = 3'h4;
                    D_game_fsm_d = 6'h12;
                end
                6'h12: begin
                    debug_counter = 4'hd;
                    alufn = 8'h1a;
                    regfile_ra1 = 2'h2;
                    regfile_ra2 = 2'h3;
                    asel = 2'h0;
                    bsel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h3;
                    D_game_fsm_d = 6'h13;
                end
                6'h13: begin
                    debug_counter = 4'he;
                    alufn = 8'h1a;
                    regfile_ra1 = 3'h6;
                    regfile_ra2 = 1'h0;
                    asel = 2'h0;
                    bsel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 1'h0;
                    D_game_fsm_d = 6'h19;
                end
                6'h16: begin
                    alufn = 8'h1;
                    regfile_ra1 = 1'h0;
                    asel = 2'h0;
                    bsel = 2'h2;
                    regfile_we = 1'h1;
                    regfile_wa = 1'h0;
                    D_game_fsm_d = 6'h14;
                end
                6'h17: begin
                    alufn = 8'h33;
                    regfile_ra2 = 1'h0;
                    asel = 2'h1;
                    bsel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    debug_counter = 7'h42;
                end
                6'h18: begin
                    regfile_ra2 = 3'h5;
                    if (~regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h16;
                    end else begin
                        D_game_fsm_d = 6'h15;
                    end
                end
                6'h19: begin
                    debug_counter = 4'he;
                    alufn = 8'h6;
                    regfile_ra1 = 2'h3;
                    asel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h4;
                    D_game_fsm_d = 6'h1a;
                end
                6'h1a: begin
                    debug_counter = 4'hf;
                    alufn = 8'h21;
                    regfile_ra1 = 2'h3;
                    asel = 2'h0;
                    bsel = 2'h3;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h3;
                    D_game_fsm_d = 6'h14;
                end
                6'h1e: begin
                    debug_counter = 5'h10;
                    alufn = 8'h33;
                    regfile_ra2 = 3'h4;
                    asel = 2'h1;
                    bsel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    D_game_fsm_d = 6'h22;
                end
                6'h1f: begin
                    debug_counter = 5'h11;
                    alufn = 8'h33;
                    regfile_ra2 = 3'h4;
                    asel = 2'h2;
                    bsel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    D_game_fsm_d = 6'h22;
                end
                6'h20: begin
                    debug_counter = 5'h12;
                    alufn = 8'h33;
                    regfile_ra2 = 3'h4;
                    asel = 2'h3;
                    bsel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    D_game_fsm_d = 6'h22;
                end
                6'h21: begin
                    debug_counter = 5'h13;
                    alufn = 8'h33;
                    regfile_ra1 = 3'h4;
                    asel = 2'h0;
                    bsel = 3'h4;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    D_game_fsm_d = 6'h22;
                end
                6'h22: begin
                    regfile_ra2 = 3'h5;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h1b;
                    end else begin
                        D_game_fsm_d = 6'h15;
                    end
                end
                6'h1b: begin
                    debug_counter = 5'h14;
                    alufn = 8'h0;
                    regfile_ra1 = 3'h7;
                    asel = 2'h0;
                    bsel = 2'h2;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h7;
                    D_game_fsm_d = 6'h1c;
                end
                6'h1c: begin
                    debug_counter = 5'h15;
                    alufn = 8'h35;
                    regfile_ra1 = 3'h7;
                    regfile_ra2 = 1'h1;
                    asel = 2'h0;
                    bsel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h5;
                    D_game_fsm_d = 6'h1d;
                end
                6'h1d: begin
                    regfile_ra2 = 3'h5;
                    if (regfile_rd2[1'h0]) begin
                        D_game_fsm_d = 6'h19;
                    end else begin
                        D_game_fsm_d = 6'h24;
                    end
                end
                6'h24: begin
                    debug_counter = 5'h16;
                    alufn = 8'h1a;
                    regfile_ra1 = 2'h2;
                    regfile_ra2 = 2'h3;
                    asel = 2'h0;
                    bsel = 2'h0;
                    regfile_we = 1'h1;
                    regfile_wa = 2'h3;
                    D_game_fsm_d = 6'h23;
                end
                6'h23: begin
                    debug_counter = 5'h17;
                    regfile_we = 1'h1;
                    regfile_wa = 3'h7;
                    alu_out_sel = 3'h4;
                    D_game_fsm_d = 6'h25;
                end
                6'h25: begin
                    debug_counter = 4'hb;
                    alufn = 8'h0;
                    regfile_ra1 = 4'h9;
                    asel = 2'h0;
                    bsel = 2'h2;
                    regfile_wa = 4'h9;
                    regfile_we = 1'h1;
                    D_game_fsm_d = 6'h26;
                end
                6'h26: begin
                    alufn = 8'h0;
                    regfile_ra1 = 1'h1;
                    asel = 2'h0;
                    bsel = 2'h2;
                    regfile_wa = 1'h1;
                    regfile_we = 1'h1;
                    D_game_fsm_d = 6'h3;
                end
                6'h15: begin
                    debug_counter = 7'h58;
                    D_game_fsm_d = 6'h15;
                end
                6'h14: begin
                    if (e4_button) begin
                        D_game_fsm_d = 6'h17;
                    end
                    if (e0_button && ~e1_button && ~e2_button && ~e3_button) begin
                        D_game_fsm_d = 6'h1e;
                    end else begin
                        if (e1_button && ~e2_button && ~e3_button && ~e0_button) begin
                            D_game_fsm_d = 6'h1f;
                        end else begin
                            if (e2_button && ~e0_button && ~e1_button && ~e3_button) begin
                                D_game_fsm_d = 6'h20;
                            end else begin
                                if (e3_button && ~e0_button && ~e1_button && ~e2_button) begin
                                    D_game_fsm_d = 6'h21;
                                end else begin
                                    
                                end
                            end
                        end
                    end
                end
            endcase
        end
    end
    
    
    always @(posedge (clk)) begin
        if ((rst) == 1'b1) begin
            D_slow_clock_counter_q <= 0;
            D_speed_pointer_q <= 5'h18;
            D_game_fsm_q <= 6'h0;
        end else begin
            D_slow_clock_counter_q <= D_slow_clock_counter_d;
            D_speed_pointer_q <= D_speed_pointer_d;
            D_game_fsm_q <= D_game_fsm_d;
        end
    end
endmodule