module game_cu (
    input clk,  // clock
    input rst,  // reset
    input decrease_timer,
    input regfile_rd2[32], //direct reading of regfile data from rd2
    
    input e0_button,
    input e1_button,
    input e2_button,
    input e3_button,
    
    output alufn[6],
    output asel[3],
    output bsel[3],
    output csel[3],
    output alu_out_sel[2],
    output regfile_wa[3],
    output regfile_ra1[3],
    output regfile_ra2[3],
    output regfile_we,
    output debug[4]
) {
    
    enum GameStates {
        GENERATE_SEQUENCE,
        CHECK_STAGE4, 
        BRANCH_CHECK4,
        ASSIGN_TIMER4,
        CHECK_STAGE8,
        BRANCH_CHECK8,
        ASSIGN_TIMER8,
        PLAYER_WINS,
        DISPLAY_SEQUENCE,
        START_SET_TIMER,
        IDLE,
        GAMEOVER,
        DECREASE_GAMETIMER,
        CHECK_GAMETIMER,
        BRANCH_GAMETIMER,
        CHECK_ELEMENT_0,
        CHECK_ELEMENT_1,
        CHECK_ELEMENT_2,
        CHECK_ELEMENT_3,
        BRANCH_ELEMENT_BUTTON,
        INCREASE_SEQUENCE_POINTER_2,
        CHECK_SEQUENCE_POINTER_LENGTH,
        BRANCH_SEQEUNCE_POINTER,
        INCREASE_SEQUENCE_LENGTH_2,
        INCREASE_STAGE_1
    }
    
    dff game_fsm[$width(GameStates)](#INIT(GameStates.START_SET_TIMER), .clk(clk), .rst(rst))
    
    always {
        
        // standard setting unless otherwise overwritten by each case 
        alufn = 0
        asel = 0 
        bsel = 0
        csel = 0
        regfile_we = 0
        regfile_wa = d6 
        regfile_ra1 = d0
        regfile_ra2 = d0
        alu_out_sel = 0
        
        debug = b0000
        
        
        game_fsm.d = game_fsm.q
        if (rst){
            game_fsm.d = GameStates.GENERATE_SEQUENCE
        }
        else{
            
            case(game_fsm.q){
                
                GameStates.GENERATE_SEQUENCE: //to fix later
                    //alufn = ?
                    asel = b11
                    bsel = b11
                    //csel = b1
                    regfile_we = 1
                    //regfile_wa = 
                    game_fsm.d = GameStates.CHECK_STAGE4
                
                GameStates.CHECK_STAGE4:
                    alufn = h25             //CMPLT
                    regfile_ra2 = d1
                    asel = b01
                    bsel = b00
                    csel = b1
                    regfile_wa = d5
                    game_fsm.d = GameStates.BRANCH_CHECK4
                
                GameStates.BRANCH_CHECK4:
                    regfile_ra2 = d5
                    //if rd2 == 1
                    if (regfile_rd2[0]){
                        game_fsm.d = GameStates.ASSIGN_TIMER4
                    }
                    else{
                        game_fsm.d = GameStates.CHECK_STAGE8
                    }

                GameStates.ASSIGN_TIMER4:
                    alufn = b100000 //ADD
                    regfile_ra1 = d6
                    asel = b00
                    bsel = b01
                    regfile_we = 1
                    regfile_wa = d6
                    game_fsm.d = GameStates.DISPLAY_SEQUENCE

                GameStates.CHECK_STAGE8:
                    alufn = h26                    //CMPLE
                    regfile_ra2 = d1
                    asel = b01
                    bsel = b00
                    csel = b1
                    regfile_wa = d5
                    game_fsm.d = GameStates.BRANCH_CHECK4
                
                GameStates.BRANCH_CHECK8:
                    regfile_ra2 = d5
                    //if rd2 == 1
                    if (regfile_rd2[0]){
                        game_fsm.d = GameStates.ASSIGN_TIMER8
                    }
                    else{
                        game_fsm.d = GameStates.PLAYER_WINS
                    }

                GameStates.ASSIGN_TIMER8:
                    alufn = b100000 //ADD
                    regfile_ra1 = d6
                    asel = b00
                    bsel = b01
                    regfile_we = 1
                    regfile_wa = d6
                    game_fsm.d = GameStates.DISPLAY_SEQUENCE

                GameStates.DECREASE_GAMETIMER:
                    alufn = h01                         //SUB
                    regfile_ra2 = d0
                    asel = b01      // constant 1
                    bsel = b00                             
                    regfile_we = 1
                    game_fsm.d = GameStates.IDLE
                
                GameStates.CHECK_GAMETIMER:
                    alufn = b110011                         //CMPEQ
                    regfile_ra2 = d6          //timer reg
                    asel = b01
                    bsel = b00                              //constant 0
                    regfile_we = 1
                    regfile_wa = d5                 //check reg
                    game_fsm.d = GameStates.BRANCH_GAMETIMER
                
                GameStates.BRANCH_GAMETIMER:
                    regfile_ra2 = d5          
                    if (~regfile_rd2[0]){                 //if timer is not zero
                        game_fsm.d = GameStates.DECREASE_GAMETIMER
                    }
                    else{
                        game_fsm.d = GameStates.GAMEOVER
                    }

                GameStates.CHECK_ELEMENT_0:
                    alufn = h24 //CMPEQ
                    regfile_ra2 = d3
                    asel = b01
                    bsel = b00
                    regfile_we = 1
                    regfile_wa = d5
                    game_fsm.d = GameStates.BRANCH_ELEMENT_BUTTON
                
                GameStates.CHECK_ELEMENT_1:
                    alufn = h24 //CMPEQ
                    regfile_ra2 = d3
                    asel = b10
                    bsel = b00
                    regfile_we = 1
                    regfile_wa = d5
                    game_fsm.d = GameStates.BRANCH_ELEMENT_BUTTON

                GameStates.CHECK_ELEMENT_2:
                    alufn = h24 //CMPEQ
                    regfile_ra1 = d3
                    asel = b11
                    bsel = b00
                    regfile_we = 1
                    regfile_wa = d5
                    game_fsm.d = GameStates.BRANCH_ELEMENT_BUTTON

                GameStates.CHECK_ELEMENT_3:
                    alufn = h24 //CMPEQ
                    regfile_ra2 = d3
                    asel = b00
                    bsel = b11
                    csel = b0
                    regfile_we = 1
                    regfile_wa = d5
                    game_fsm.d = GameStates.BRANCH_ELEMENT_BUTTON

                GameStates.BRANCH_ELEMENT_BUTTON:
                    regfile_ra2 = d5
                    if (regfile_rd2[0]){
                        game_fsm.d = GameStates.INCREASE_SEQUENCE_POINTER_2
                    }
                    else{
                        game_fsm.d = GameStates.GAMEOVER
                    }

                GameStates.INCREASE_SEQUENCE_POINTER_2:
                    alufn = h20 // ADD
                    regfile_ra2 = d4
                    asel = b11
                    bsel = b00
                    regfile_we = 1
                    game_fsm.d = GameStates.CHECK_SEQUENCE_POINTER_LENGTH
                
                GameStates.CHECK_SEQUENCE_POINTER_LENGTH:
                    alufn = h25 // CMPLT
                    regfile_ra1 = d3
                    regfile_ra2 = d4
                    asel = b00
                    bsel = b00
                    csel = b1
                    regfile_we = 1
                    regfile_wa = d5
                    game_fsm.d = GameStates.BRANCH_SEQEUNCE_POINTER

                GameStates.BRANCH_SEQEUNCE_POINTER:
                    regfile_ra2 = d5
                    if (regfile_rd2[0]){
                        game_fsm.d = GameStates.IDLE
                    }
                    else{
                        game_fsm.d = GameStates.INCREASE_SEQUENCE_LENGTH_2
                    }
                
                GameStates.INCREASE_SEQUENCE_LENGTH_2:
                    alufn = h20 // ADD
                    regfile_ra2 = d4
                    asel = b11
                    bsel = b00
                    regfile_we = 1
                    game_fsm.d = GameStates.INCREASE_STAGE_1

                GameStates.INCREASE_STAGE_1:
                    alufn = h20 // ADD
                    regfile_ra2 = d1
                    asel = b10
                    bsel = b00
                    regfile_we = 1
                    game_fsm.d = GameStates.CHECK_STAGE4

                GameStates.GAMEOVER:
                    game_fsm.d = GameStates.GAMEOVER

                GameStates.IDLE:
                    if (decrease_timer){
                        game_fsm.d = GameStates.CHECK_GAMETIMER
                    }
                    else if (e0_button && ~e1_button && ~e2_button && ~e3_button){
                        game_fsm.d = GameStates.CHECK_ELEMENT_0
                    }
                    else if (e1_button && ~e2_button && ~e3_button){
                        game_fsm.d = GameStates.CHECK_ELEMENT_1
                    }
                    else if (e2_button && ~e3_button){
                        game_fsm.d = GameStates.CHECK_ELEMENT_2
                    }
                    else if (e3_button){
                        game_fsm.d = GameStates.CHECK_ELEMENT_3
                    }
                    else{
                        game_fsm.d = GameStates.IDLE
                    }
                
                
            }
        }
        
    }
}

/*
                    alufn = ?
                    regfile_ra1 = 
                    regfile_ra2 = 
                    asel = b11
                    bsel = b11
                    csel = b1
                    regfile_we = 1
                    regfile_wa = 
                    game_fsm.d = 
*/